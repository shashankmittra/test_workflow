name: Build and SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Install Dependencies
        run: npm install

      - name: Run Tests and Generate Coverage Report
        run: |
          mkdir -p test-results
          npm test -- --coverage --ci --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_DIR: test-results/
          JEST_JUNIT_OUTPUT_NAME: junit.xml
        continue-on-error: true   # <== Let the workflow continue even if some tests fail

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
      - name: Generate Sonar Report
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/issues/search?componentKeys=${{ secrets.SONAR_PROJECT_KEY }}&resolved=false&ps=500" -o sonar_report.json

      - name: Upload Sonar Report to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: sonar_report.json

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/   # <== Upload the entire coverage folder (generated by Jest)

      - name: Upload Test Results (JUnit XML)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/   # <== Upload JUnit-style test results
